version: "3.9"

networks:
  test_network3:
    driver: bridge

volumes:
  mongodb_storage:
    driver: local
  mongodb:
  mongodb_config:

services:

  http_server:
    image: python:3.8.16-slim-buster
    container_name: http_server
    # network_mode: host
    networks:
    - test_network3
    ports:
      - "3306:3306"     
    volumes:
      - ./datadrive:/home/ai_controller_v62/datadrive/
    command: python -m http.server --bind 0.0.0.0 3306 --directory /home/ai_controller_v62/datadrive/
    extra_hosts:
      host.docker.internal: host-gateway
    restart: on-failure:5

  backend:
    image: "backend"
    build: "./automate"
    container_name: backend
    # network_mode: host
    networks:
    - test_network3
    ports:
      - "8000:8000"     
    volumes:
      - ./automate:/home/backend
    command: python manage.py runserver 0.0.0.0:8000
    
    extra_hosts:
      host.docker.internal: host-gateway
    restart: on-failure:5

  
  ai_controller_v62:
    image: "ai_controller_v62"
    # image: nvidia/cuda:10.2-base
    build: ./ai_controller_v62
    container_name: ai_controller_v62
    # network_mode: host
    
    networks:
    - test_network3

    volumes:
    - ./ai_controller_v62/:/home/ai_controller_v62/
    - ./datadrive:/home/ai_controller_v62/datadrive/
    
    # runtime: nvidia
    # devices:
    #   - /dev/nvidiactl
    #   - /dev/nvidia-uvm
    #   - /dev/nvidia0
    # environment:
    #   - NVIDIA_VISIBLE_DEVICES=all

    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    #         - driver: nvidia

    # ulimits:
    #   memlock: -1
    
    command: python worker_general.py
    extra_hosts:
      host.docker.internal: host-gateway
    restart: on-failure:5

  mongodb:
    image: mongo
    container_name: mongodb
    
    networks:
    - test_network3
    ports:
      - 27017:27017
    volumes:
      - ./AUTOMATE-GENERAL:/data/db
    command: mongod --bind_ip_all

  mongo-restore:
    image: mongo
    container_name: mongo-restore
    volumes:
      - ./AUTOMATE-GENERAL:/backup
    depends_on:
      - mongodb
    command: mongorestore --host mongodb --db AUTOMATE-GENERAL /backup/
    
  frontend:
    image: "frontend"
    build: ./fe
    container_name: frontend
    ports:
      - 4200:4200
    volumes:
      - ./fe:/home/frontend
    command: ng serve --host 0.0.0.0 --port 4200
    restart: on-failure:5

  redis:
    image: redis:latest
    networks:
      - test_network3
    ports:
     - 6379:6379
        

